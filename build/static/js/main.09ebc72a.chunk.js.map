{"version":3,"sources":["components/Person.js","components/Input.js","components/Button.js","components/Filter.js","services/People.js","components/Notification.js","App.js","index.js"],"names":["Person","person","deletePerson","className","name","number","onClick","Input","value","onChange","Button","type","text","Filter","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","notifClass","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchParam","setSearchParam","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","peopleService","initialPeople","peopleToShow","filter","includes","event","target","onSubmit","preventDefault","map","window","confirm","p","changedPerson","setTimeout","catch","error","returnedPerson","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09ebc72a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n    return (\r\n      <li className='person'>\r\n        {person.name}  \r\n         {person.number}\r\n        <button onClick={deletePerson}>delete</button>\r\n      </li>\r\n      )\r\n  }\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Input = ({value, onChange}) => {\r\n    return (\r\n    <input value={value}\r\n    onChange={onChange}\r\n    /> )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Button = ({type, text}) => {\r\n    return (\r\n        <button type={type}>{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Input from './Input'\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return <div>\r\n    filter shown with: <Input value={value}\r\n    onChange={onChange}/>\r\n  </div>\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\n  export default { getAll, create, update, remove }","  import React from 'react'\r\n\r\nconst Notification = ({message, notifClass}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notifClass}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect} from 'react'\r\nimport Person from './components/Person.js'\r\nimport Input from './components/Input.js'\r\nimport Button from './components/Button.js'\r\nimport Filter from './components/Filter.js'\r\nimport peopleService from './services/People'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName ] = useState('')\r\n  const [newNumber, setNewNumber ] = useState('')\r\n  const [searchParam, setSearchParam] = useState('')\r\n  const [successMessage, setSuccessMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    peopleService\r\n      .getAll()\r\n      .then(initialPeople => {\r\n        setPersons(initialPeople)\r\n      })\r\n  }, [])\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchParam(event.target.value)\r\n  }\r\n  \r\n  const addNumber = (event) => {\r\n    event.preventDefault()\r\n    const Person = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n    \r\n    let names = persons.map(person =>person.name)\r\n    \r\n    if(names.includes(newName)){\r\n      if(window.confirm(`${newName} is already in the phonebook, replace the old number with a new one?`)){\r\n        const id = persons.filter(p => p.name === newName)[0].id\r\n        peopleService\r\n          .update(id, Person)\r\n            .then(changedPerson => {\r\n              setPersons(persons.map(person => person.id !== id ? person : changedPerson))\r\n              setSuccessMessage(\r\n                `Person's '${newName}' number changed succesfully`\r\n              )\r\n              setTimeout(() => {\r\n                setSuccessMessage(null)\r\n              }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(\r\n              `Failed to update number of '${newName}' to the database`\r\n            )\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n          })\r\n      }\r\n    } else {\r\n      peopleService\r\n        .create(Person)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(Person))\r\n          setSuccessMessage(\r\n            `Person '${newName}' added successfully`\r\n          )\r\n          setTimeout(() => {\r\n            setSuccessMessage(null)\r\n          }, 5000)\r\n          setNewName(\"\")\r\n          setNewNumber(\"\")\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(\r\n            `Failed to add '${newName}' to the database`\r\n          )\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  } \r\n    \r\n  \r\n\r\n  const deletePersonThis = id => {\r\n    if (window.confirm('Are you sure you want to remove this contact?')){\r\n      \r\n      peopleService\r\n        .remove(id)\r\n        .then(response => {\r\n          setPersons(persons.filter(p => p.id !== id))\r\n          setSuccessMessage(\r\n            `User removed successfully`\r\n          )\r\n          setTimeout(() => {\r\n            setSuccessMessage(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(\r\n            `This person was already removed from the database`\r\n          )\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n          setPersons(persons.filter(p => p.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const peopleToShow = persons.filter(person => person.name.includes(searchParam))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification message={successMessage} notifClass='success'/>\r\n      <Notification message={errorMessage} notifClass='error'/>\r\n\r\n      <Filter value={searchParam} onChange={handleSearchChange}/>\r\n\r\n      <h2>add a new number</h2>\r\n      <form onSubmit={addNumber}>\r\n        <div>\r\n          name: <Input value={newName}\r\n          onChange={handleNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number: <Input value={newNumber}\r\n          onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button type=\"submit\" text='add' />\r\n        </div>\r\n      </form>\r\n      <h2>Numbers</h2>\r\n      {peopleToShow.map((person) =>\r\n        <Person \r\n        key={person.name} \r\n        person={person}\r\n        deletePerson={() => deletePersonThis(person.id)}/>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}